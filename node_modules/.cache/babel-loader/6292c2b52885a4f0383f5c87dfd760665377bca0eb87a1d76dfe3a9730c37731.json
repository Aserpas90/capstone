{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\capstone\\\\src\\\\components\\\\balance.js\",\n  _s = $RefreshSig$();\nimport Card from \"./context\";\nimport { useState, useContext, useEffect } from \"react\";\nimport { UserContext } from \"./context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Balance() {\n  _s();\n  //retrieve data of (amount) using context hook\n  const ctx = useContext(UserContext);\n  const balance = ctx.user.balance;\n  //setting local time clock which self-updates\n  let time = new Date().toLocaleTimeString();\n  const [currentTime, setCurrentTime] = useState(time);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      let time = new Date().toLocaleTimeString();\n      setCurrentTime(time);\n    }, 1000);\n    // Cleanup the interval when the component is unmounted\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    header: \"Account Balance\",\n    body: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"Your balance as of \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: currentTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 36\n        }, this), \" is:\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [balance, \"$\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(Balance, \"90G2ZTKnoQijZFY65VGz5wYnA7Y=\");\n_c = Balance;\nvar _c;\n$RefreshReg$(_c, \"Balance\");","map":{"version":3,"names":["Card","useState","useContext","useEffect","UserContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Balance","_s","ctx","balance","user","time","Date","toLocaleTimeString","currentTime","setCurrentTime","interval","setInterval","clearInterval","header","body","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/andre/capstone/src/components/balance.js"],"sourcesContent":["import Card from \"./context\";\nimport { useState, useContext, useEffect } from \"react\";\nimport { UserContext }          from \"./context\";\n\nexport default function Balance() {\n    //retrieve data of (amount) using context hook\n    const ctx = useContext(UserContext);\n    const balance = ctx.user.balance;\n    //setting local time clock which self-updates\n    let time = new Date().toLocaleTimeString();\n    const [currentTime, setCurrentTime] = useState(time);\n    \n    useEffect(() => {\n        const interval = setInterval(() => {\n          let time = new Date().toLocaleTimeString();\n          setCurrentTime(time);\n        }, 1000);\n        // Cleanup the interval when the component is unmounted\n        return () => clearInterval(interval);\n      }, []);\n\n    return (\n        <Card\n        header= \"Account Balance\"\n        body= {\n            <>\n            <h5>Your balance as of <b>{currentTime}</b> is:</h5>\n            <h2><b>{balance}$</b></h2> \n            </>        \n        }\n        ></Card>\n    );\n}"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,WAAW;AAC5B,SAASC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AACvD,SAASC,WAAW,QAAiB,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjD,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAC9B;EACA,MAAMC,GAAG,GAAGT,UAAU,CAACE,WAAW,CAAC;EACnC,MAAMQ,OAAO,GAAGD,GAAG,CAACE,IAAI,CAACD,OAAO;EAChC;EACA,IAAIE,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC;EAC1C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAACa,IAAI,CAAC;EAEpDX,SAAS,CAAC,MAAM;IACZ,MAAMgB,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjC,IAAIN,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC;MAC1CE,cAAc,CAACJ,IAAI,CAAC;IACtB,CAAC,EAAE,IAAI,CAAC;IACR;IACA,OAAO,MAAMO,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAER,oBACIb,OAAA,CAACN,IAAI;IACLsB,MAAM,EAAE,iBAAiB;IACzBC,IAAI,eACAjB,OAAA,CAAAE,SAAA;MAAAgB,QAAA,gBACAlB,OAAA;QAAAkB,QAAA,GAAI,qBAAmB,eAAAlB,OAAA;UAAAkB,QAAA,EAAIP;QAAW;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,QAAI;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpDtB,OAAA;QAAAkB,QAAA,eAAIlB,OAAA;UAAAkB,QAAA,GAAIZ,OAAO,EAAC,GAAC;QAAA;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,eACxB;EACL;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAEhB;AAAClB,EAAA,CA5BuBD,OAAO;AAAAoB,EAAA,GAAPpB,OAAO;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}